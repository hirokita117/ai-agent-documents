---
description: 
globs:
alwaysApply: false
---
# 技術記事執筆スタイルガイド

## 1. 記事構成

### 1.1 タイトル
- 具体的な技術要素を含める（例：「Laravel」「Eloquent Model」など）
- 「〜した件」「〜すべきこと」など、経験や推奨事項を示す表現を使用

### 1.2 導入部
- 記事を書くに至った背景や課題を説明
- 読者が共感できる具体的な問題提起から始める
- 技術的なコンテキストを明確に示す

### 1.3 本文構成
- 見出しを適切に階層化
- 文章は、以下のような構成を基本とする
  - 概要
  - 結論
  - 本文
  - 記事のまとめ
- 具体的な実装例とその説明を交互に配置
- コードブロックを効果的に活用
- 段階的に解決方法を説明

## 2. 文体・トーン

### 2.1 基本的な文体
- 敬体（です・ます調）を基本とする
- 技術的な説明は簡潔かつ正確に
- 個人の経験に基づく知見を共有する際は、一人称（「私は」）を適切に使用
- 英単語の前後には半角スペースを挿入する
  - 例： 私は Laravel を用いてアプリケーションを開発しています。
- 「事」という字を単体で利用することはしないで、「こと」に置き換える
  - 悪い例： 聞いた事がありますか？
  - 良い例： 聞いたことがありますか？
- 「時」という漢字の使用について
  - 「時間」「時刻」「時期」を表す場合は漢字で「時」と書く（名詞として時間を表現しているので）
    - 例： 楽しいことをしていると、時の流れが早く感じる。
  - 「～場合」と言い換え可能なら、ひらがなで「とき」と書く（形式名詞として時間を表現しているので）
    - 例： 困ったときは連絡してください。

### 2.2 説明スタイル
- 問題提起→解決方法→実装例の流れで説明
- 理論的な説明と実践的なコード例をバランスよく配置
- 必要に応じて図表やコードブロックを活用

## 3. コード例の提示方法

### 3.1 コードブロックの使用
- 言語指定を明確に行う
- 重要な部分を強調
- 必要に応じてコメントを追加
- Before/Afterの形で改善点を示す

### 3.2 コードの説明
- コードの意図や動作を明確に説明
- 特に重要な箇所は詳細に解説
- 想定される副作用や注意点も併せて説明

## 4. 実践的なヒント

### 4.1 具体例の提示
- 実際の開発現場で遭遇した問題を元に説明
- 具体的なユースケースを示す
- 失敗例とその解決方法も含める

### 4.2 補足情報
- 参考リンクを適切に提供
- 関連する技術情報への誘導
- 発展的な内容や代替案の提示

## 5. 品質管理

### 5.1 技術的正確性
- 最新のバージョンや仕様に基づいた情報提供
- 動作確認済みのコード例の提示
- 必要に応じて環境情報の明記

### 5.2 読みやすさ
- 適切な見出しの使用
- 箇条書きやテーブルの活用
- コードブロックの適切な配置
- 段落分けによる読みやすさの確保

## 6. まとめ方

### 6.1 結論の示し方
- 記事の主要なポイントを簡潔に整理
- 実践的な提案や推奨事項の明確化
- 必要に応じて次のステップや発展的な話題の提示
